import{_ as e,o as t,c as i,a as s}from"./app.57a3dbd1.js";const a="/assets/iter-1.92de1d9a.png",l="/assets/iter-2.2e16bf85.png",n="/assets/iter-3.878d4f71.png",r="/assets/iter-4.7ab1e5cb.png",o="/assets/iter-5.477cb686.png",v=JSON.parse('{"title":"Iterate the element list","description":"","frontmatter":{"contributors":["ZhouYixun"]},"headers":[{"level":2,"title":"Features","slug":"features","link":"#features","children":[]},{"level":2,"title":"Instructions","slug":"instructions","link":"#instructions","children":[]},{"level":2,"title":"Applicable elements","slug":"applicable-elements","link":"#applicable-elements","children":[]}],"relativePath":"en/doc/doc-iterator.md","lastUpdated":1716537034000}'),c={name:"en/doc/doc-iterator.md"},h=s('<h1 id="iterate-the-element-list" tabindex="-1">Iterate the element list <a class="header-anchor" href="#iterate-the-element-list" aria-hidden="true">#</a></h1><p>The sublist element of the iterator element. (This function needs to be upgraded to Sonic v2.2.0 version)</p><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-hidden="true">#</a></h2><p>When Sonic performs UI automation, if you need to operate list type elements, it will be a headache, unless you use custom scripts, otherwise you need to add elements one by one to operate.</p><p><img src="'+a+'" alt="iter-1"></p><p>But if you use the [Iterate element list] function, you can realize that you only need to add a list element, and you can continuously iterate each sub-element in the list for operation.</p><h2 id="instructions" tabindex="-1">Instructions <a class="header-anchor" href="#instructions" aria-hidden="true">#</a></h2><ol><li>First find the parent element of the element list, quickly copy the xpath of the parent element, and then add the className of the child element at the end of the xpath, then the final result of the xpath search is the entire element list.</li></ol><p><img src="'+l+'" alt="iter-2"></p><div class="tip custom-block"><p class="custom-block-title">note</p><p>Of course, not only xpath, but also effective if the resource-id can locate multiple elements with the same resource-id.</p><p>Other positioning methods are the same.</p></div><ol start="2"><li>Add the [Iterate element list] step, select the newly added element</li></ol><p><img src="'+n+'" alt="iter-3"></p><ol start="3"><li>Select the iterative element to be operated in the sub-step, the [current iterative element] in the figure is each sub-element in the list</li></ol><p><img src="'+r+'" alt="iter-4"></p><ol start="4"><li>Run, you will find that each element in the list will execute all sub-steps</li></ol><p><img src="'+o+'" alt="iter-5"></p><h2 id="applicable-elements" tabindex="-1">Applicable elements <a class="header-anchor" href="#applicable-elements" aria-hidden="true">#</a></h2><p>The current functional scope is as follows</p><ol><li>Android native elements</li><li>iOS native elements</li><li>POCO element</li></ol><p>We are working hard to adapt the web element...</p>',20),p=[h];function d(u,m,f,_,b,g){return t(),i("div",null,p)}const x=e(c,[["render",d]]);export{v as __pageData,x as default};
