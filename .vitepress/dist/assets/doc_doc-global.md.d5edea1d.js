import{_ as t,o as d,c as l,a as e}from"./app.57a3dbd1.js";const u=JSON.parse('{"title":"全局参数","description":"","frontmatter":{"contributors":["ZhouYixun","小蓝枣"]},"headers":[{"level":2,"title":"使用方法与内置参数","slug":"使用方法与内置参数","link":"#使用方法与内置参数","children":[]},{"level":2,"title":"特殊用法","slug":"特殊用法","link":"#特殊用法","children":[]},{"level":2,"title":"添加全局参数","slug":"添加全局参数","link":"#添加全局参数","children":[]},{"level":2,"title":"编辑全局参数","slug":"编辑全局参数","link":"#编辑全局参数","children":[]},{"level":2,"title":"删除全局参数","slug":"删除全局参数","link":"#删除全局参数","children":[]}],"relativePath":"doc/doc-global.md","lastUpdated":1716537034000}'),i={name:"doc/doc-global.md"},a=e('<h1 id="全局参数" tabindex="-1">全局参数 <a class="header-anchor" href="#全局参数" aria-hidden="true">#</a></h1><p>对项目进行全局参数管理。</p><h2 id="使用方法与内置参数" tabindex="-1">使用方法与内置参数 <a class="header-anchor" href="#使用方法与内置参数" aria-hidden="true">#</a></h2><p>除了用户能自定义全局参数外，Sonic还内置了部分参数供随机数据构造使用。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>测试过程中，例如【获取文本】一类的测试步骤的结果也可以存放到临时参数里，后续也可以通过相同方式引用，达到参数传递的效果。</p></div><div><table><thead><tr><th>参数名</th><th>作用</th><th>例子</th><th>结果</th></tr></thead><tbody><tr><td>random</td><td>随机两位数的数字</td><td>John has {{random}} children.</td><td>John has 32 children.</td></tr><tr><td>timestamp</td><td>当前时间戳（13位）</td><td>当前时间戳: {{timestamp}}</td><td>当前时间戳: 1675172119000</td></tr><tr><td>random[数字]</td><td>[数字]位数的随机数字（<strong>v2.3.0版本后可用</strong>）</td><td>这是随机五位数：{{random[5]}}</td><td>这是随机五位数：32354</td></tr><tr><td>random[数字-数字]</td><td>[数字]到[数字]之间随机抽取一位数字（<strong>v2.3.0版本后可用</strong>）</td><td>她花费了{{random[100-200]}}元</td><td>她花费了156元</td></tr><tr><td>random[字符串|字符串|字符串...]</td><td>从[]里用|分隔的字符串随机抽取一个字符串（<strong>v2.3.0版本后可用</strong>）</td><td>{{random[hello|123|???]}}</td><td>hello 或者 123 或者 ???</td></tr><tr><td>全局参数的参数名</td><td>将文本对应参数名内容替换为参数值</td><td>hello, {{name}}</td><td>hello, sonic</td></tr></tbody></table></div><h2 id="特殊用法" tabindex="-1">特殊用法 <a class="header-anchor" href="#特殊用法" aria-hidden="true">#</a></h2><p>一般地，全局参数可以同个参数名分配给多个运行设备。</p><div><p>例：Hello全局参数的参数值为12|13|14。某用例步骤为【输入文本】，文本值为 <code>abc{{Hello}}</code>。</p></div><p>那么执行套件时，若选择设备覆盖，并且执行机器为安卓机器A与安卓机器B。</p><p>执行到步骤【输入文本】时，安卓A会输入<code>abc12</code>，安卓B会输入<code>abc13</code>。</p><h2 id="添加全局参数" tabindex="-1">添加全局参数 <a class="header-anchor" href="#添加全局参数" aria-hidden="true">#</a></h2><ol><li>前往首页，点击目标项目。</li><li>点击【测试数据管理】选项。</li><li>点击【全局参数】选项。</li><li>点击【添加全局参数】按钮。</li><li>输入参数名和参数值，如果有多个参数值可以用 | 号隔开。</li><li>点击【确定】按钮。</li><li>全局参数添加完毕！</li></ol><h2 id="编辑全局参数" tabindex="-1">编辑全局参数 <a class="header-anchor" href="#编辑全局参数" aria-hidden="true">#</a></h2><ol><li>前往首页，点击目标项目。</li><li>点击【测试数据管理】选项。</li><li>点击【全局参数】选项。</li><li>点击目标参数的【编辑】按钮。</li><li>编辑你需要更改的信息。</li><li>点击【确定】按钮。</li><li>全局参数编辑完毕！</li></ol><h2 id="删除全局参数" tabindex="-1">删除全局参数 <a class="header-anchor" href="#删除全局参数" aria-hidden="true">#</a></h2><ol><li>前往首页，点击目标项目。</li><li>点击【测试数据管理】选项。</li><li>点击【全局参数】选项。</li><li>点击目标参数的【删除】按钮。</li><li>再次点击【确定】按钮。</li><li>全局参数删除完毕！</li></ol>',17),r=[a];function o(n,h,c,s,p,_){return d(),l("div",null,r)}const b=t(i,[["render",o]]);export{u as __pageData,b as default};
