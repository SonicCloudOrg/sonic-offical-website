import{_ as s,o as n,c as a,a as t}from"./app.57a3dbd1.js";const h=JSON.parse('{"title":"前后端部署","description":"","frontmatter":{"contributors":["ZhouYixun","soniclei"]},"headers":[{"level":2,"title":"快速部署","slug":"快速部署","link":"#快速部署","children":[]},{"level":2,"title":".env 配置项解释","slug":"env-配置项解释","link":"#env-配置项解释","children":[]},{"level":2,"title":"使用自己的 Eureka","slug":"使用自己的-eureka","link":"#使用自己的-eureka","children":[]},{"level":2,"title":"在docker-compose.yml中内置MySQL（不推荐）","slug":"在docker-compose-yml中内置mysql-不推荐","link":"#在docker-compose-yml中内置mysql-不推荐","children":[]},{"level":2,"title":"常见问题（Q&A）","slug":"常见问题-q-a","link":"#常见问题-q-a","children":[]}],"relativePath":"deploy/back-end-deploy.md","lastUpdated":1716537034000}'),l={name:"deploy/back-end-deploy.md"},e=t(`<h1 id="前后端部署" tabindex="-1">前后端部署 <a class="header-anchor" href="#前后端部署" aria-hidden="true">#</a></h1><p>本文将介绍如何部署 Sonic 的 Server 端与 Client 端。</p><h2 id="快速部署" tabindex="-1">快速部署 <a class="header-anchor" href="#快速部署" aria-hidden="true">#</a></h2><p>该方式将一次性部署前后端。</p><p>准备工作：docker-compose、Docker、MySQL</p><ol><li>创建一个MySQL数据库，数据库名可自定义，注意字符集为 utf8，排序规则为 utf8_general_ci。如果你想MySQL随着Sonic一同启动（不推荐），可以参考本页下方<code>在docker-compose.yml中内置MySQL</code>的内容。</li><li><a href="https://ghproxy.com/https://github.com/SonicCloudOrg/sonic-server/releases/download/v2.6.4/sonic-server-v2.6.4.zip" target="_blank" rel="noreferrer">点击这里</a> 下载最新版本的 <strong>zip</strong> 文件到任意目录（如加速链接失效，请自行前往 <a href="https://github.com/SonicCloudOrg/sonic-server/releases" target="_black">这里</a> 下载）。</li><li>解压 zip，更改.env 中的信息。（无需改动 docker-compose.yml 文件。env 配置项内容可查看下方表格。如果您的系统没显示.env，在本页最下方【常见问题】查看解决方案）</li><li>当前目录下执行以下指令</li></ol><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker-compose</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">up</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">如果您为中国大陆用户，出现访问DockerHub较慢的情况，可以从以下两点选择一个进行操作：</p><ul><li>配置国内加速镜像源（推荐）</li><li>执行以下指令直接使用加速镜像（不推荐，加速源可能出现不稳定或网络波动，后续down的时候需要docker-compose -f docker-compose-zh.yml down）</li></ul><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker-compose</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-f</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker-compose-zh.yml</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">up</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span></span>
<span class="line"></span></code></pre></div></div><ol start="5"><li>前后端部署完毕！（因 Eureka 心跳机制，刚启动完毕微服务间互相访问需要 3~5 分钟，请耐心等候）打开浏览器访问 <a href="http://localhost:3000" target="_blank" rel="noreferrer">http://localhost:3000</a>，然后可 <strong>直接前往</strong> Agent 端部署。</li><li>（附）如果您是经验丰富的运维人员，也可以前往 Eureka 页面查看各微服务状态。</li></ol><h2 id="env-配置项解释" tabindex="-1">.env 配置项解释 <a class="header-anchor" href="#env-配置项解释" aria-hidden="true">#</a></h2><table><thead><tr><th>字段名</th><th>解释</th><th>示例</th></tr></thead><tbody><tr><td>SONIC_SERVER_HOST</td><td>部署 sonic-server 机器的 ipv4 地址，不能使用 localhost、127.0.0.1。<strong>可以使用域名。</strong></td><td>192.168.0.1</td></tr><tr><td>SONIC_SERVER_PORT</td><td>整个服务端对外暴露端口，默认 3000。<strong>可以使用 80</strong></td><td>3000</td></tr><tr><td>SONIC_EUREKA_USERNAME</td><td>Eureka 的用户名（为提高安全性，不建议使用默认值，可以更改为其他任意字符串，不能含<code>@</code>和<code>%</code>）</td><td>sonic</td></tr><tr><td>SONIC_EUREKA_PASSWORD</td><td>Eureka 的密码（为提高安全性，不建议使用默认值，可以更改为其他任意字符串，不能含<code>@</code>和<code>%</code>）</td><td>sonic</td></tr><tr><td>SONIC_EUREKA_PORT</td><td>Eureka 启动端口（一般不需要改动）</td><td>9090</td></tr><tr><td>MYSQL_HOST</td><td>MySQL 服务的 host，不能使用 localhost、127.0.0.1.</td><td>192.168.0.1</td></tr><tr><td>MYSQL_PORT</td><td>MySQL 服务的端口（一般默认为 3306）</td><td>3306</td></tr><tr><td>MYSQL_DATABASE</td><td>Sonic 服务要用到的数据库</td><td>sonic</td></tr><tr><td>MYSQL_USERNAME</td><td>MySQL 数据库用户名</td><td>root</td></tr><tr><td>MYSQL_PASSWORD</td><td>MySQL 数据库密码</td><td>Sonic!@#123</td></tr><tr><td>SECRET_KEY</td><td>token 加密密钥（为提高安全性，不建议使用默认值，可以更改为其他任意字符串）</td><td>sonic</td></tr><tr><td>EXPIRE_DAY</td><td>token 有效天数</td><td>14</td></tr><tr><td>PERMISSION_ENABLE</td><td>是否开启权限配置</td><td>true</td></tr><tr><td>PERMISSION_SUPER_ADMIN</td><td>超管用户名</td><td>sonic</td></tr><tr><td>REGISTER_ENABLE</td><td>是否开启用户注册</td><td>true</td></tr><tr><td>NORMAL_USER_ENABLE</td><td>是否开启普通用户登录</td><td>true</td></tr><tr><td>LDAP_USER_ENABLE</td><td>是否开启 LDAP 用户登录</td><td>true</td></tr><tr><td>LDAP_USER_ID</td><td>LDAP user id 搜索字段</td><td>cn</td></tr><tr><td>LDAP_BASE_DN</td><td>LDAP user 搜索用户组</td><td>users</td></tr><tr><td>LDAP_BASE</td><td>LDAP Base DN</td><td>ou=system</td></tr><tr><td>LDAP_USERNAME</td><td>LDAP Base DN 管理员用户名</td><td>uid=admin,ou=system</td></tr><tr><td>LDAP_PASSWORD</td><td>LDAP Base DN 管理员密码</td><td>Sonic!@#123</td></tr><tr><td>LDAP_URL</td><td>LDAP 服务 URL</td><td>ldap://192.168.0.1:10389</td></tr><tr><td>LDAP_OBJECT_CLASS</td><td>LDAP 筛选 class，默认为 person</td><td>person</td></tr></tbody></table><h2 id="使用自己的-eureka" tabindex="-1">使用自己的 Eureka <a class="header-anchor" href="#使用自己的-eureka" aria-hidden="true">#</a></h2><p>如果您自己有 Eureka 服务，可以查看本小节。</p><ol><li>将 <strong>docker-compose.yml</strong> 文件去掉 Eureka 服务。</li><li>将 <strong>docker-compose.yml</strong> 的 SONIC_EUREKA_HOST 填写为自己 Eureka 服务的 host。</li><li>将.env 中的配置修改为自己 Eureka 服务的信息。</li><li>完成！</li></ol><h2 id="在docker-compose-yml中内置mysql-不推荐" tabindex="-1">在docker-compose.yml中内置MySQL（不推荐） <a class="header-anchor" href="#在docker-compose-yml中内置mysql-不推荐" aria-hidden="true">#</a></h2><p>因Docker挂载时如果出现操作不当或数据迁移时的风险会引起MySQL容易数据丢失，因此docker-compose.yml默认没有附带MySQL镜像。</p><div class="warning custom-block"><p class="custom-block-title">警告</p><p>该方式不一定兼容所有Docker版本与Linux系统与Mysql版本，操作前应当备份当前数据。而且更新时会导致MySQL容器停止与删除，因此推荐MySQL单独部署或使用已有MySQL服务。</p></div><p>如果想MySQL随着sonic一同启动，你可以进行如下操作：</p><ol><li>当前目录下创建<code>mysql</code>文件夹</li></ol><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">mkdir</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysql/log</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysql/data</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysql/conf</span></span>
<span class="line"></span></code></pre></div><ol start="2"><li>将.env中的<code>MYSQL_HOST</code>改为<code>sonic-mysql</code></li><li>在docker-compose.yml中加入以下 <strong>注释部分</strong> 的内容</li></ol><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">version: &#39;3&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">services:</span></span>
<span class="line"><span style="color:#A6ACCD;">  sonic-server-eureka:</span></span>
<span class="line"><span style="color:#A6ACCD;">  .</span></span>
<span class="line"><span style="color:#A6ACCD;">  .</span></span>
<span class="line"><span style="color:#A6ACCD;">  .</span></span>
<span class="line"><span style="color:#A6ACCD;">  .</span></span>
<span class="line"><span style="color:#A6ACCD;">  .</span></span>
<span class="line"><span style="color:#A6ACCD;">  sonic-client-web:</span></span>
<span class="line"><span style="color:#A6ACCD;">    image: &quot;sonicorg/sonic-client-web:SONIC_VERSION&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    environment:</span></span>
<span class="line"><span style="color:#A6ACCD;">      - SONIC_SERVER_HOST</span></span>
<span class="line"><span style="color:#A6ACCD;">      - SONIC_SERVER_PORT</span></span>
<span class="line"><span style="color:#A6ACCD;">    networks:</span></span>
<span class="line"><span style="color:#A6ACCD;">      - sonic-network</span></span>
<span class="line"><span style="color:#A6ACCD;">    depends_on:</span></span>
<span class="line"><span style="color:#A6ACCD;">      - sonic-server-gateway</span></span>
<span class="line"><span style="color:#A6ACCD;">    restart: on-failure</span></span>
<span class="line"><span style="color:#A6ACCD;">    ports:</span></span>
<span class="line"><span style="color:#A6ACCD;">      - &quot;\${SONIC_SERVER_PORT}:80&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;"># ==== MySQL ====</span></span>
<span class="line"><span style="color:#A6ACCD;">  sonic-mysql:</span></span>
<span class="line"><span style="color:#A6ACCD;">    image: &quot;mysql:5.7&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    hostname: sonic-mysql</span></span>
<span class="line"><span style="color:#A6ACCD;">    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci</span></span>
<span class="line"><span style="color:#A6ACCD;">    environment:</span></span>
<span class="line"><span style="color:#A6ACCD;">      - MYSQL_ROOT_PASSWORD=\${MYSQL_PASSWORD}</span></span>
<span class="line"><span style="color:#A6ACCD;">      - MYSQL_DATABASE</span></span>
<span class="line"><span style="color:#A6ACCD;">    volumes:</span></span>
<span class="line"><span style="color:#A6ACCD;">      - ./mysql/log:/var/log/mysql</span></span>
<span class="line"><span style="color:#A6ACCD;">      - ./mysql/data:/var/lib/mysql</span></span>
<span class="line"><span style="color:#A6ACCD;">      - ./mysql/conf:/etc/mysql</span></span>
<span class="line"><span style="color:#A6ACCD;">    ports:</span></span>
<span class="line"><span style="color:#A6ACCD;">      - &quot;3306:3306&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    networks:</span></span>
<span class="line"><span style="color:#A6ACCD;">      - sonic-network      </span></span>
<span class="line"><span style="color:#A6ACCD;"># ==== End ====</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">networks:</span></span>
<span class="line"><span style="color:#A6ACCD;">  sonic-network:</span></span>
<span class="line"><span style="color:#A6ACCD;">    driver: bridge</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><ol start="4"><li>执行 <code>docker-compose up -d</code> 即可。</li></ol><h2 id="常见问题-q-a" tabindex="-1">常见问题（Q&amp;A） <a class="header-anchor" href="#常见问题-q-a" aria-hidden="true">#</a></h2><p>Q1: 浏览器访问前端无误，但是注册时出现【系统出错了】或【发生未知异常】。</p><p>A1: 解决方案可参考 <a href="https://sonic-cloud.wiki/d/35-sonic" target="_blank" rel="noreferrer">这个帖子</a></p><hr><p>Q2: 查看日志发现是 MySQL 没有连上，该怎么解决？</p><p>A2: 主要分为多种情况:</p><ul><li>MySQL 没有开启远程访问权限。</li><li>因为采用 Docker 容器部署，127.0.0.1 或 localhost 这种 ip 地址是无效的。</li><li>公司网络限制等等特殊情况。</li></ul><p>解决方案可参考 <a href="https://sonic-cloud.wiki/d/33-mysql" target="_blank" rel="noreferrer">这个帖子</a>。</p><hr><p>Q3: 目前文件挂载在 Docker 默认目录，怎样才能挂载到自定义的文件目录呢？</p><p>A3: 解决方案可参考 <a href="https://sonic-cloud.wiki/d/120-sonic" target="_blank" rel="noreferrer">这个帖子</a>。</p><hr><p>Q4: Mac 系统解压后没看到.env 文件，怎么解决呢？</p><p>A4: 解决方案可参考 <a href="https://sonic-cloud.wiki/d/707-mac" target="_blank" rel="noreferrer">这个帖子</a></p><hr><p>Q5: Linux 系统解压后没看到.env 文件，怎么解决呢？</p><p>A5: 可以使用 ls -a 指令查看隐藏文件</p><hr><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>更多疑问可前往 👉<a href="https://discord.gg/c9ZD6jSyTE" target="_blank" rel="noreferrer">社区</a>👈 交流</p></div>`,42),o=[e];function p(r,c,d,i,A,C){return n(),a("div",null,o)}const D=s(l,[["render",p]]);export{h as __pageData,D as default};
