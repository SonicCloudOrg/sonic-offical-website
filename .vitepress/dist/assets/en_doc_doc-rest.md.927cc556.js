import{_ as e,o as t,c as i,a as o}from"./app.57a3dbd1.js";const g=JSON.parse('{"title":"REST API","description":"","frontmatter":{"contributors":["ZhouYixun"]},"headers":[{"level":2,"title":"view documentation","slug":"view-documentation","link":"#view-documentation","children":[]},{"level":2,"title":"Debug Http REST API online","slug":"debug-http-rest-api-online","link":"#debug-http-rest-api-online","children":[]},{"level":2,"title":"Part of the HTTP API explanation","slug":"part-of-the-http-api-explanation","link":"#part-of-the-http-api-explanation","children":[{"level":3,"title":"Occupy the device and obtain remote debugging information through the REST API","slug":"occupy-the-device-and-obtain-remote-debugging-information-through-the-rest-api","link":"#occupy-the-device-and-obtain-remote-debugging-information-through-the-rest-api","children":[]},{"level":3,"title":"Release device via REST API","slug":"release-device-via-rest-api","link":"#release-device-via-rest-api","children":[]}]}],"relativePath":"en/doc/doc-rest.md","lastUpdated":1716537034000}'),a={name:"en/doc/doc-rest.md"},r=o('<h1 id="rest-api" tabindex="-1">REST API <a class="header-anchor" href="#rest-api" aria-hidden="true">#</a></h1><p>Here is a tutorial on using Sonic&#39;s Http protocol Rest API documentation.</p><h2 id="view-documentation" tabindex="-1">view documentation <a class="header-anchor" href="#view-documentation" aria-hidden="true">#</a></h2><ol><li>Click [About Sonic] in the avatar floating box in the upper right corner of the page</li><li>Click REST API</li><li>You can enter the document page</li></ol><h2 id="debug-http-rest-api-online" tabindex="-1">Debug Http REST API online <a class="header-anchor" href="#debug-http-rest-api-online" aria-hidden="true">#</a></h2><ol><li>Search for the /login request and log in</li><li>Get the return value after login, this is your Token. (You can also directly generate Token directly in the Sonic Avatar drop-down box)</li><li>Go to [Document Management] on the API page</li><li>Click [Global Parameters]</li><li>Add a new global parameter named SonicToken, the value is your Token, and the type is header.</li><li>Done! You can choose the Http request you need to debug and happily debug online~</li></ol><h2 id="part-of-the-http-api-explanation" tabindex="-1">Part of the HTTP API explanation <a class="header-anchor" href="#part-of-the-http-api-explanation" aria-hidden="true">#</a></h2><h3 id="occupy-the-device-and-obtain-remote-debugging-information-through-the-rest-api" tabindex="-1">Occupy the device and obtain remote debugging information through the REST API <a class="header-anchor" href="#occupy-the-device-and-obtain-remote-debugging-information-through-the-rest-api" aria-hidden="true">#</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>This function needs to be upgraded to Sonic v2.5.0</p></div><ol><li>Refer to the documentation of the REST API to initiate the corresponding HTTP request</li><li>After the request, the device will enter the <code>occupied</code> state, and the available time will be affected by the maximum occupied time of the background management center. Remember to initiate the <strong>release device</strong> request again after use.</li><li>You can use the returned results for remote adb connection, remote wda connection, etc.</li></ol><blockquote><p>${baseURL}/server/api/controller/devices/occupy</p></blockquote><table><thead><tr><th>Body field</th><th>Field analysis</th><th>Example</th></tr></thead><tbody><tr><td>udId</td><td>device udId (required)</td><td>abcdefg</td></tr><tr><td>sasRemotePort</td><td>(Only valid for Android devices) Device adb remote connection port. It is not required. If it is 0 or left blank, it will not be exposed or start the corresponding service. The recommended value range is 30000-65535.</td><td>30001</td></tr><tr><td>uia2RemotePort</td><td>(Only valid for Android devices) The device uia2 server remote connection port. It is not required. If it is 0 or left blank, it will not be exposed or start the corresponding service. The recommended value range is 30000-65535.</td><td>30002</td></tr><tr><td>sibRemotePort</td><td>(Only available for iOS devices) The device sib remote connection port. It is not required. If it is 0 or left blank, it will not be exposed or start the corresponding service. The recommended value range is 30000-65535.</td><td>30003</td></tr><tr><td>wdaServerRemotePort</td><td>(Only available for iOS devices) The device wda server remote connection port. It is not required. If it is 0 or left blank, it will not be exposed or start the corresponding service. The recommended value range is 30000-65535.</td><td>30004</td></tr><tr><td>wdaMjpegRemotePort</td><td>(Only valid for iOS devices) Device wda mjpeg remote connection port. It is not required. If it is 0 or left blank, it will not be exposed or start the corresponding service. The recommended value range is 30000-65535.</td><td>30005</td></tr></tbody></table><h3 id="release-device-via-rest-api" tabindex="-1">Release device via REST API <a class="header-anchor" href="#release-device-via-rest-api" aria-hidden="true">#</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>This function needs to be upgraded to Sonic v2.5.0, and used in conjunction with <code>Occupy the device and obtain remote debugging information through the REST API</code>.</p></div><ol><li>Refer to the documentation of the REST API to initiate the corresponding HTTP request</li></ol><blockquote><p>${baseURL}/server/api/controller/devices/release?udId=xxxx</p></blockquote><ol start="2"><li>After the request is made, the device will enter the state of unoccupied, and services such as sas, sib, uia2, and wda during the occupation period will also release resources.</li></ol>',17),n=[r];function d(l,c,s,h,u,p){return t(),i("div",null,n)}const m=e(a,[["render",d]]);export{g as __pageData,m as default};
