import{_ as s,o as a,c as e,a as n}from"./app.57a3dbd1.js";const D=JSON.parse('{"title":"切换WebView","description":"","frontmatter":{"contributors":["ZhouYixun"]},"headers":[{"level":2,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[]},{"level":2,"title":"关于ChromeDriver","slug":"关于chromedriver","link":"#关于chromedriver","children":[]},{"level":2,"title":"查找AndroidProcess","slug":"查找androidprocess","link":"#查找androidprocess","children":[{"level":3,"title":"开发提供了AndroidManifest.xml","slug":"开发提供了androidmanifest-xml","link":"#开发提供了androidmanifest-xml","children":[]},{"level":3,"title":"手动查找","slug":"手动查找","link":"#手动查找","children":[]}]},{"level":2,"title":"切换Handle","slug":"切换handle","link":"#切换handle","children":[]},{"level":2,"title":"控件操作","slug":"控件操作","link":"#控件操作","children":[]}],"relativePath":"doc/doc-to-webview.md","lastUpdated":1716537034000}'),l={name:"doc/doc-to-webview.md"},o=n(`<h1 id="切换webview" tabindex="-1">切换WebView <a class="header-anchor" href="#切换webview" aria-hidden="true">#</a></h1><p>使用切换WebView相关操作注意事项与教学。</p><h2 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-hidden="true">#</a></h2><p>v2.0.0-beta开始，切换WebView时，需确保：</p><ol><li>已经打开WebView页面</li><li>被测App已经开启WebView的Debug开关。（如果是微信的H5、小程序一类，需确保微信的debugx5已开启）</li></ol><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">webView</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setWebContentsDebuggingEnabled</span><span style="color:#89DDFF;">(true);</span></span>
<span class="line"></span></code></pre></div><ol start="3"><li>远控页面的【网页调试】能看到对应WebView</li></ol><h2 id="关于chromedriver" tabindex="-1">关于ChromeDriver <a class="header-anchor" href="#关于chromedriver" aria-hidden="true">#</a></h2><p>v2.0.0-beta开始，Sonic会自动匹配并下载WebView对应Chrome版本的ChromeDriver，能兼容大概80-85%左右的版本。</p><p>但是部分旧Chrome版本或M1版本的缺失，可能造成自动下载失败，这时我们需要手动添加chromeDriver文件到Agent的<strong>webview</strong>目录下。 例：被测WebView的Chrome协议版本为77.0.3865.10，我们需将对应版本的chromeDriver重命名为</p><p>Macosx or Linux:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">77.0.3865.10_chromedriver</span></span>
<span class="line"></span></code></pre></div><p>Windows:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">77.0.3865.10_chromedriver.exe</span></span>
<span class="line"></span></code></pre></div><h2 id="查找androidprocess" tabindex="-1">查找AndroidProcess <a class="header-anchor" href="#查找androidprocess" aria-hidden="true">#</a></h2><p>使用切换WebView页面时，有AndroidProcess可选项，一般默认使用包名对应的process，但是如果WebView放在多进程（例如微信H5），则会切换失败。这时需要我们指定process。</p><h3 id="开发提供了androidmanifest-xml" tabindex="-1">开发提供了AndroidManifest.xml <a class="header-anchor" href="#开发提供了androidmanifest-xml" aria-hidden="true">#</a></h3><p>如果您的开发提供了 <strong>AndroidManifest.xml</strong> ，以 <strong>org.sonic.test</strong> 为例：</p><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">activity</span><span style="color:#89DDFF;"> </span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">android</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.Hello</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">android</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">process</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">:helloworld</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"></span></code></pre></div><p>那么AndroidProcess为 <strong>org.sonic.test:helloworld</strong></p><h3 id="手动查找" tabindex="-1">手动查找 <a class="header-anchor" href="#手动查找" aria-hidden="true">#</a></h3><p>如果App为第三方App或者开发不能提供AndroidManifest.xml，我们也可以手动查找。以 <strong>com.android.browser</strong> 为例（将 com.android.browser 替换为您的被测应用包名）：</p><ol><li>打开WebView页面</li><li>输入指令</li></ol><p>Windows:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">adb</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">shell</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ps</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">findstr</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">com.android.browser</span></span>
<span class="line"></span></code></pre></div><p>Macosx or Linux:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">adb</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">shell</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ps</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">grep</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">com.android.browser</span></span>
<span class="line"></span></code></pre></div><p>你会获得类似输出</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">u0_a90</span><span style="color:#A6ACCD;">         </span><span style="color:#F78C6C;">8907</span><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">517</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2321912</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">340180</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">                   </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">S</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">com.android.browser</span></span>
<span class="line"><span style="color:#FFCB6B;">u0_a90</span><span style="color:#A6ACCD;">         </span><span style="color:#F78C6C;">9252</span><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">517</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2261048</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">293056</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">                   </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">S</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">com.android.browser:swan0</span></span>
<span class="line"></span></code></pre></div><ol start="3"><li>那么 com.android.browser:swan0 即为 AndroidProcess。如果有多个进程，则需要一一尝试。</li></ol><h2 id="切换handle" tabindex="-1">切换Handle <a class="header-anchor" href="#切换handle" aria-hidden="true">#</a></h2><p>一般地，一个WebView进程只有一个页面，但是也会有多个页面共用的情况，就像我们的浏览器会有多个Tab的场景。这时我们切换WebView之后，默认进入的是第一个Tab窗口，如果不是我们需要测试的窗口，则需要我们切换。</p><p>以微信H5为例：</p><ol><li>使用AndroidProcess为 <a href="http://com.tencent.mm" target="_blank" rel="noreferrer">com.tencent.mm</a>:tools（有的微信版本是 <a href="http://com.tencent.mm" target="_blank" rel="noreferrer">com.tencent.mm</a>:appbrand0 ）切换WebView。</li><li>这时我们获取页面标题，就会发现默认切换的窗口是微信的【搜一搜】窗口。</li><li>然后我们使用【切换Handle】步骤，输入目标页面的标题。（v2.1.0开始，也可以输入页面的页面地址或Handle数组下标定位目标Handle）</li><li>然后就可以切换到我们的期望页面，可以开始进行UI自动化操作了。</li></ol><h2 id="控件操作" tabindex="-1">控件操作 <a class="header-anchor" href="#控件操作" aria-hidden="true">#</a></h2><p>控件定位以及操作都是基于 <a href="https://github.com/SeleniumHQ/selenium" target="_blank" rel="noreferrer">Selenium</a> 框架进行UI自动化，定位教程与相关知识不再此处详细教学了。</p>`,36),p=[o];function r(t,c,i,d,C,h){return a(),e("div",null,p)}const A=s(l,[["render",r]]);export{D as __pageData,A as default};
