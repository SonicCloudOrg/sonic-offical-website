import{_ as t,o as e,c as i,a}from"./app.57a3dbd1.js";const r="/assets/iter-1.92de1d9a.png",s="/assets/iter-2.2e16bf85.png",l="/assets/iter-3.878d4f71.png",o="/assets/iter-4.7ab1e5cb.png",c="/assets/iter-5.477cb686.png",v=JSON.parse('{"title":"迭代控件列表","description":"","frontmatter":{"contributors":["ZhouYixun"]},"headers":[{"level":2,"title":"功能介绍","slug":"功能介绍","link":"#功能介绍","children":[]},{"level":2,"title":"使用方法","slug":"使用方法","link":"#使用方法","children":[]},{"level":2,"title":"适用控件","slug":"适用控件","link":"#适用控件","children":[]}],"relativePath":"doc/doc-iterator.md","lastUpdated":1716537034000}'),p={name:"doc/doc-iterator.md"},n=a('<h1 id="迭代控件列表" tabindex="-1">迭代控件列表 <a class="header-anchor" href="#迭代控件列表" aria-hidden="true">#</a></h1><p>迭代控件的子列表控件。（该功能需升级至Sonic v2.2.0版本）</p><h2 id="功能介绍" tabindex="-1">功能介绍 <a class="header-anchor" href="#功能介绍" aria-hidden="true">#</a></h2><p>在Sonic进行UI自动化的时候，如果需要对列表类型控件操作，就会非常头疼，除非使用自定义脚本，不然的话需要一个个控件添加进行操作。</p><p><img src="'+r+'" alt="iter-1"></p><p>但是如果使用【迭代控件列表】功能，就可以实现只需添加一个列表控件，就能不停迭代列表中的每个子控件进行操作。</p><h2 id="使用方法" tabindex="-1">使用方法 <a class="header-anchor" href="#使用方法" aria-hidden="true">#</a></h2><ol><li>先找到控件列表的父控件，快捷复制父控件的xpath，然后在xpath结尾加上子控件的className，那么最终xpath搜出来的结果就是整个控件列表。</li></ol><p><img src="'+s+'" alt="iter-2"></p><div class="tip custom-block"><p class="custom-block-title">注意</p><p>当然，不仅仅xpath，如果resource-id能定位到多个同resource-id的控件，一样有效。</p><p>其他定位方式同理。</p></div><ol start="2"><li>添加【迭代控件列表】步骤，选择刚刚新增的控件</li></ol><p><img src="'+l+'" alt="iter-3"></p><ol start="3"><li>子步骤中选择要操作的迭代控件，图中的【当前迭代控件】就是列表中的每个子控件</li></ol><p><img src="'+o+'" alt="iter-4"></p><ol start="4"><li>运行，你会发现列表中每个控件都会执行所有子步骤</li></ol><p><img src="'+c+'" alt="iter-5"></p><h2 id="适用控件" tabindex="-1">适用控件 <a class="header-anchor" href="#适用控件" aria-hidden="true">#</a></h2><p>当前功能适用范围如下</p><ol><li>安卓原生控件</li><li>iOS原生控件</li><li>POCO控件</li></ol><p>Web控件我们正努力适配中...</p>',20),d=[n];function h(_,m,u,g,f,b){return e(),i("div",null,d)}const S=t(p,[["render",h]]);export{v as __pageData,S as default};
